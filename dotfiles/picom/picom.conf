#################################
#           Shadows             #
#################################
shadow = true;
shadow-radius = 25;
shadow-offset-x = -24.0;
shadow-offset-y = -24.0;
shadow-opacity = 1.0;
# shadow-exclude = [
#   "name = 'Notification'",
#   "class_g = 'Conky'",
#   "class_g = 'URxvt' && _NET_WM_STATE@:32a",
#   "_GTK_FRAME_EXTENTS@:c"
# ];

#################################
#           Fading              #
#################################
fading = true;
fade-in-step = 0.05;
fade-out-step = 0.05;
fade-delta = 16;

#################################
#           Opacity             #
#################################
inactive-opacity = 0.95;
active-opacity = 1.0;
frame-opacity = 1.0;
inactive-opacity-override = true;

#################################
#           Corners             #
#################################

# Sets the radius of rounded window corners. When > 0, the compositor will
# round the corners of windows. Does not interact well with
# `transparent-clipping`.
corner-radius = 10;
round-borders = 10;

# Exclude conditions for rounded corners.
# rounded-corners-exclude = [
#  "window_type = 'dock'",
#   "window_type = 'desktop'",
#   "class_g = 'Vmware-view'"
# ];

#################################
#      General Settings         #
#################################
# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
# `xrender` is the default one.
backend = "xrender";
#backend = "glx";

# VSync
vsync = true;

experimental-backends = true;

#################################
#          Animation            #
#################################
animations = (
  {
    triggers = ["close"];
    opacity = {
      curve = "cubic-bezier(0,0,1,-0.28)";
      duration = .2; 
      start = "window-raw-opacity-before";
      end = 0;
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";
    scale-x = {
      curve = "cubic-bezier(0,0,1,-0.28)";
      duration = .2;
      start = 1;
      end = .5;
    };
    scale-y = "scale-x";
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  },
  {
    triggers = ["open"];
    opacity = {
      curve = "cubic-bezier(0,1.28,1,1)";
      duration = .2;
      start = 0;
      end = "window-raw-opacity";
    }
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";
    scale-x = {
      curve = "cubic-bezier(0,1.28,1,1)";
      duration = .2;
      start = .5;
      end = 1;
    };
    scale-y = "scale-x";
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  },
  {
    triggers = ["geometry"]
    scale-x = {
      curve = "cubic-bezier(0,1.28,1,1)";
      duration = 0.22;
      start = "window-width-before / window-width";
      end = 1;
    }
    scale-y = {
      curve = "cubic-bezier(0,1.28,1,1)";
      duration = 0.22;
      start = "window-height-before / window-height";
      end = 1;
    }
    offset-x = {
      curve = "cubic-bezier(0,1.28,1,1)";
      duration = 0.22;
      start = "window-x-before - window-x";
      end = 0;
    }
    offset-y = {
      curve = "cubic-bezier(0,1.28,1,1)";
      duration = 0.22;
      start = "window-y-before - window-y";
      end = 0;
    }

    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }
);
